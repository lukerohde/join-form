require 'pry-byebug'

weeks = [26.75, 42.9, 40.83, 39.25, 38.87, 44.77, 46.1, 47.52, 42.1, 47.82, 41.78, 40.98, 40.58, 36.2, 42.57, 43.22, 39.63, 43.05, 39.17, 43.1, 50.7, 33.97, 30.73, 41.07, 40.75, 33.15, 39.57, 39.05, 38.93, 39.08, 37.6, 32.05, 39.38, 39.03, 33.92, 6.3]

def max_overtime(weeks)
  return 0 if weeks.nil?
  options = (0..3).map do |i| 
  	result = overtime(weeks[i..(i+3)]) 
  	result += max_overtime(weeks[i+4..weeks.length])
  end

  #puts "#{weeks.length} - #{call.depth}"
  options.max
end

def overtime(weeks)
  return 0 if weeks.nil? || weeks == []
  [0, weeks.reduce(:+) - 152].max
end

puts weeks.each_slice(8).to_a

result =  weeks.each_slice(8).map do |w|
	result = (0..3).map do |i|
		first_part = overtime(w[0..i-1]) if i > 0
		whole_part = overtime(w[i..i+3]) 
		last_part = overtime(w[-4+i..-1])
		(first_part||0) + whole_part + last_part
	end
	result.max
end

puts result
puts result.reduce(:+)